// Author :- Nitish ,    Github:- c-oco


/*                                     Using Recursion                   */

import java.util.* ;
import java.io.*; 

public class Solution {
    public static List < Integer > getPreOrderTraversal(TreeNode root) {
    	List<Integer> ans = new ArrayList<>();

        preorder(root, ans);

        return ans;
    }

    public static void preorder(TreeNode root, List<Integer> ans){
        if(root==null) return ;
        
		ans.add(root.data);          // Add the root

        preorder(root.left, ans);     // Go to left

        preorder(root.right, ans);    // Go to right
    }
}




/*                                     Using Iteration                    */


import java.util.* ;
import java.io.*; 

public class Solution {
    public static List < Integer > getPreOrderTraversal(TreeNode root) {
    	List<Integer> ans = new ArrayList<>();

        Stack<TreeNode> st = new Stack<>();
        if(root!=null)
		  st.add(root);

		while(!st.isEmpty()){
			TreeNode node = st.pop();

			ans.add(node.data);
            
			if(node.right!=null)
			  st.add(node.right);
			if(node.left!=null)
			  st.add(node.left);
		}

        return ans;
    }
}
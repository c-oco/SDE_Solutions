// Author :- Nitish ,    Github:- c-oco



import java.util.* ;
import java.io.*; 

class TrieNode{
  private TrieNode childs[];
  private boolean end;

  TrieNode(){
    childs = new TrieNode[26];
    end = false;
  }

  public boolean containsKey(char ch){
    return childs[ch-'a'] != null;
  }

  public TrieNode get(char ch){
    return childs[ch-'a'];
  }

  public void put(char ch, TrieNode node){
    childs[ch-'a'] = node;
  }

  public boolean isEnd(){
    return end;
  }

  public void setEnd(){
    end = true;
  }
}

class Trie{
  TrieNode root;

  Trie(){
    root = new TrieNode();
  }

  public void insert(String s){
    TrieNode node = root;

    for(char ch:s.toCharArray()){
      if(!node.containsKey(ch)){
        node.put(ch, new TrieNode());
      }

      node = node.get(ch);
    }
    node.setEnd();
  }

  public String checkPrefix(String s, String ans){
    TrieNode node = root;

    for(char ch:s.toCharArray()){
      if(node.containsKey(ch)){
        node = node.get(ch);
        if(!node.isEnd())       // Check if some word ends here
          return ans;
      }
      else{
        return ans;
      }
    }

    if(s.length()>ans.length())
      return s;
    else if(s.length()==ans.length() && s.compareTo(ans)<0)
      return s;
    else
      return ans;
  }
}

class Solution {
  public static String completeString(int n, String[] a) {
    String ans = "";

    Trie trie = new Trie();

    for(String s:a){
      trie.insert(s);
    }

    for(String s:a){
      ans = trie.checkPrefix(s, ans);
    }

    if(ans.length()==0) return "None";

    return ans;
  }
}
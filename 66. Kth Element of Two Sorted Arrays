// Author :- Nitish ,    Github:- c-oco



public class Solution {
    public static int ninjaAndLadoos(int row1[], int row2[], int m, int n, int k) {
        if(m>n) return ninjaAndLadoos(row2, row1, n, m, k);

        int lb=Math.max(0, k-n), ub=Math.min(k,m);

        while(lb<=ub){
            int m1 = (lb+ub)/2;
            int m2 = k - m1;

            int l1 = (m1>0)?row1[m1-1]:Integer.MIN_VALUE; 
            int l2 = (m2>0)?row2[m2-1]:Integer.MIN_VALUE; 
            int r1 = (m1<m)?row1[m1]:Integer.MAX_VALUE; 
            int r2 = (m2<n)?row2[m2]:Integer.MAX_VALUE;

            if((l1<=r2) && (l2<=r1)){
                return (int) Math.max(l1, l2);
            }
            else if(l1>r2){
                ub = m1-1;
            }
            else{
                lb = m1+1;
            }
        } 

        return 1;
    }
}
